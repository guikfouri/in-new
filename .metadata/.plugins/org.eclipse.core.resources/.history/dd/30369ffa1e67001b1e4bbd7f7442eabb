package br.com.seatecnologia.in.submit.jornal.configuration;

import com.liferay.configuration.admin.display.ConfigurationFormRenderer;
import com.liferay.frontend.taglib.servlet.taglib.util.JSPRenderer;
import com.liferay.portal.configuration.metatype.bnd.util.ConfigurableUtil;
import com.liferay.portal.kernel.util.ParamUtil;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.osgi.service.component.annotations.Activate;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Modified;
import org.osgi.service.component.annotations.Reference;

@Component(
		configurationPid = "br.com.seatecnologia.in.submit.jornal.configuration.JornalConfiguration",
		immediate = true,
		service = ConfigurationFormRenderer.class)
public class JornalConfigurationFormRenderer implements ConfigurationFormRenderer{

	@Override
    public String getPid() {
        return "br.com.seatecnologia.in.submit.jornal.configuration.JornalConfiguration";
    }
	
	@Override
    public void render(HttpServletRequest request, HttpServletResponse response) throws IOException {
           
		JornalConfigurationDisplayContext jornalConfigurationDisplayContext = 
	    		new JornalConfigurationDisplayContext();
		
		jornalConfigurationDisplayContext.set_groupId(_jornalConfiguration.groupId());
		jornalConfigurationDisplayContext.set_folderId(_jornalConfiguration.folderId());
		jornalConfigurationDisplayContext.set_folderIdImages(_jornalConfiguration.folderIdImages());
		jornalConfigurationDisplayContext.set_structureId(_jornalConfiguration.jornalStructureId());
		jornalConfigurationDisplayContext.set_templateId(_jornalConfiguration.jornalTemplateId());
		jornalConfigurationDisplayContext.set_pathLogo(_jornalConfiguration.pathLogo());
		jornalConfigurationDisplayContext.set_pathScript(_jornalConfiguration.pathScript());
	    
		jornalConfigurationDisplayContext.set_fromName(_jornalConfiguration.fromName());
		jornalConfigurationDisplayContext.set_fromAddress(_jornalConfiguration.fromAddress());
		jornalConfigurationDisplayContext.set_emailDest(_jornalConfiguration.emailDest());

		jornalConfigurationDisplayContext.set_emailSubject(_jornalConfiguration.emailSubject());
		jornalConfigurationDisplayContext.set_emailBody(_jornalConfiguration.emailBody());
		
		jornalConfigurationDisplayContext.set_host(_jornalConfiguration.host());
		jornalConfigurationDisplayContext.set_port(_jornalConfiguration.port());
		jornalConfigurationDisplayContext.set_username(_jornalConfiguration.username());
		jornalConfigurationDisplayContext.set_password(_jornalConfiguration.password());
		jornalConfigurationDisplayContext.set_port(_jornalConfiguration.port());
	    
	    request.setAttribute(JornalConfigurationDisplayContext.class.getName(), jornalConfigurationDisplayContext);
		
		 _jspRenderer.renderJSP( _servletContext, request, response,
				    "/configuration/email.jsp");
    }
	
	@Override
    public Map<String, Object> getRequestParameters(
            HttpServletRequest request) {

        Map<String, Object> params = new HashMap<>();
        
        String groupId = ParamUtil.getString(request, "preferences--groupId--");
        String folderId = ParamUtil.getString(request, "preferences--folderId--");
        String folderIdImages = ParamUtil.getString(request, "preferences--folderIdImages--");
		String structureId = ParamUtil.getString(request, "preferences--structureId--");
		String templateId = ParamUtil.getString(request, "preferences--templateId--");
		String pathLogo = ParamUtil.getString(request, "preferences--pathLogo--");
		String pathScript = ParamUtil.getString(request, "preferences--pathScript--");
		params.put("groupId", groupId);
		params.put("folderId", folderId);
		params.put("folderIdImages", folderIdImages);
		params.put("jornalStructureId", structureId);
		params.put("jornalTemplateId", templateId);
		params.put("pathLogo", pathLogo);
		params.put("pathScript", pathScript);

        String fromName = ParamUtil.getString(request, "preferences--fromName--");
		String fromAddress = ParamUtil.getString(request, "preferences--fromAddress--");
		String emailDest = ParamUtil.getString(request, "preferences--emailDest--");
		params.put("fromName", fromName);
		params.put("fromAddress", fromAddress);
		params.put("emailDest", emailDest);

		String emailSubject = ParamUtil.getString(request, "preferences--emailSubject--");
		String emailBody = ParamUtil.getString(request, "email");
		params.put("emailSubject", emailSubject);
		params.put("emailBody", emailBody);
		
        String port = ParamUtil.getString(request, "preferences--port--");
		params.put("port", port);
		
        return params;
    }
	
	@Activate
	@Modified
	public void activate(Map<String, Object> properties) {
		_jornalConfiguration =
	        ConfigurableUtil.createConfigurable(
	        		JornalConfiguration.class,
	            properties);
	}

	private volatile JornalConfiguration _jornalConfiguration;
	
	@Reference
	private JSPRenderer _jspRenderer;
	
	@Reference(
		target = "(osgi.web.symbolicname=br.com.seatecnologia.in.submit.jornal)",
		unbind = "-"
	)
	private ServletContext _servletContext;
}
