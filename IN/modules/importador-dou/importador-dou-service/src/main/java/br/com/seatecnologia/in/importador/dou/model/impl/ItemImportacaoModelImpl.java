/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.seatecnologia.in.importador.dou.model.impl;

import aQute.bnd.annotation.ProviderType;

import br.com.seatecnologia.in.importador.dou.model.ItemImportacao;
import br.com.seatecnologia.in.importador.dou.model.ItemImportacaoModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ItemImportacao service. Represents a row in the &quot;IN_ItemImportacao&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ItemImportacaoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ItemImportacaoImpl}.
 * </p>
 *
 * @author SEA Tecnologia
 * @see ItemImportacaoImpl
 * @see ItemImportacao
 * @see ItemImportacaoModel
 * @generated
 */
@ProviderType
public class ItemImportacaoModelImpl extends BaseModelImpl<ItemImportacao>
	implements ItemImportacaoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a item importacao model instance should use the {@link ItemImportacao} interface instead.
	 */
	public static final String TABLE_NAME = "IN_ItemImportacao";
	public static final Object[][] TABLE_COLUMNS = {
			{ "itemImportacaoId", Types.BIGINT },
			{ "tipoItem", Types.VARCHAR },
			{ "dataImportacao", Types.TIMESTAMP },
			{ "identificadorAtualizacao", Types.VARCHAR },
			{ "importado", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("itemImportacaoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tipoItem", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dataImportacao", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("identificadorAtualizacao", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("importado", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IN_ItemImportacao (itemImportacaoId LONG not null primary key,tipoItem VARCHAR(1000) null,dataImportacao DATE null,identificadorAtualizacao VARCHAR(1000) null,importado BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IN_ItemImportacao";
	public static final String ORDER_BY_JPQL = " ORDER BY itemImportacao.itemImportacaoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IN_ItemImportacao.itemImportacaoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(br.com.seatecnologia.in.importador.dou.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.seatecnologia.in.importador.dou.model.ItemImportacao"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(br.com.seatecnologia.in.importador.dou.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.seatecnologia.in.importador.dou.model.ItemImportacao"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(br.com.seatecnologia.in.importador.dou.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.seatecnologia.in.importador.dou.model.ItemImportacao"),
			true);
	public static final long IDENTIFICADORATUALIZACAO_COLUMN_BITMASK = 1L;
	public static final long IMPORTADO_COLUMN_BITMASK = 2L;
	public static final long ITEMIMPORTACAOID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(br.com.seatecnologia.in.importador.dou.service.util.ServiceProps.get(
				"lock.expiration.time.br.com.seatecnologia.in.importador.dou.model.ItemImportacao"));

	public ItemImportacaoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _itemImportacaoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setItemImportacaoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _itemImportacaoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ItemImportacao.class;
	}

	@Override
	public String getModelClassName() {
		return ItemImportacao.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemImportacaoId", getItemImportacaoId());
		attributes.put("tipoItem", getTipoItem());
		attributes.put("dataImportacao", getDataImportacao());
		attributes.put("identificadorAtualizacao", getIdentificadorAtualizacao());
		attributes.put("importado", isImportado());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long itemImportacaoId = (Long)attributes.get("itemImportacaoId");

		if (itemImportacaoId != null) {
			setItemImportacaoId(itemImportacaoId);
		}

		String tipoItem = (String)attributes.get("tipoItem");

		if (tipoItem != null) {
			setTipoItem(tipoItem);
		}

		Date dataImportacao = (Date)attributes.get("dataImportacao");

		if (dataImportacao != null) {
			setDataImportacao(dataImportacao);
		}

		String identificadorAtualizacao = (String)attributes.get(
				"identificadorAtualizacao");

		if (identificadorAtualizacao != null) {
			setIdentificadorAtualizacao(identificadorAtualizacao);
		}

		Boolean importado = (Boolean)attributes.get("importado");

		if (importado != null) {
			setImportado(importado);
		}
	}

	@Override
	public long getItemImportacaoId() {
		return _itemImportacaoId;
	}

	@Override
	public void setItemImportacaoId(long itemImportacaoId) {
		_itemImportacaoId = itemImportacaoId;
	}

	@Override
	public String getTipoItem() {
		if (_tipoItem == null) {
			return "";
		}
		else {
			return _tipoItem;
		}
	}

	@Override
	public void setTipoItem(String tipoItem) {
		_tipoItem = tipoItem;
	}

	@Override
	public Date getDataImportacao() {
		return _dataImportacao;
	}

	@Override
	public void setDataImportacao(Date dataImportacao) {
		_dataImportacao = dataImportacao;
	}

	@Override
	public String getIdentificadorAtualizacao() {
		if (_identificadorAtualizacao == null) {
			return "";
		}
		else {
			return _identificadorAtualizacao;
		}
	}

	@Override
	public void setIdentificadorAtualizacao(String identificadorAtualizacao) {
		_columnBitmask |= IDENTIFICADORATUALIZACAO_COLUMN_BITMASK;

		if (_originalIdentificadorAtualizacao == null) {
			_originalIdentificadorAtualizacao = _identificadorAtualizacao;
		}

		_identificadorAtualizacao = identificadorAtualizacao;
	}

	public String getOriginalIdentificadorAtualizacao() {
		return GetterUtil.getString(_originalIdentificadorAtualizacao);
	}

	@Override
	public boolean getImportado() {
		return _importado;
	}

	@Override
	public boolean isImportado() {
		return _importado;
	}

	@Override
	public void setImportado(boolean importado) {
		_columnBitmask |= IMPORTADO_COLUMN_BITMASK;

		if (!_setOriginalImportado) {
			_setOriginalImportado = true;

			_originalImportado = _importado;
		}

		_importado = importado;
	}

	public boolean getOriginalImportado() {
		return _originalImportado;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ItemImportacao.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ItemImportacao toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ItemImportacao)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ItemImportacaoImpl itemImportacaoImpl = new ItemImportacaoImpl();

		itemImportacaoImpl.setItemImportacaoId(getItemImportacaoId());
		itemImportacaoImpl.setTipoItem(getTipoItem());
		itemImportacaoImpl.setDataImportacao(getDataImportacao());
		itemImportacaoImpl.setIdentificadorAtualizacao(getIdentificadorAtualizacao());
		itemImportacaoImpl.setImportado(isImportado());

		itemImportacaoImpl.resetOriginalValues();

		return itemImportacaoImpl;
	}

	@Override
	public int compareTo(ItemImportacao itemImportacao) {
		long primaryKey = itemImportacao.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ItemImportacao)) {
			return false;
		}

		ItemImportacao itemImportacao = (ItemImportacao)obj;

		long primaryKey = itemImportacao.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ItemImportacaoModelImpl itemImportacaoModelImpl = this;

		itemImportacaoModelImpl._originalIdentificadorAtualizacao = itemImportacaoModelImpl._identificadorAtualizacao;

		itemImportacaoModelImpl._originalImportado = itemImportacaoModelImpl._importado;

		itemImportacaoModelImpl._setOriginalImportado = false;

		itemImportacaoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ItemImportacao> toCacheModel() {
		ItemImportacaoCacheModel itemImportacaoCacheModel = new ItemImportacaoCacheModel();

		itemImportacaoCacheModel.itemImportacaoId = getItemImportacaoId();

		itemImportacaoCacheModel.tipoItem = getTipoItem();

		String tipoItem = itemImportacaoCacheModel.tipoItem;

		if ((tipoItem != null) && (tipoItem.length() == 0)) {
			itemImportacaoCacheModel.tipoItem = null;
		}

		Date dataImportacao = getDataImportacao();

		if (dataImportacao != null) {
			itemImportacaoCacheModel.dataImportacao = dataImportacao.getTime();
		}
		else {
			itemImportacaoCacheModel.dataImportacao = Long.MIN_VALUE;
		}

		itemImportacaoCacheModel.identificadorAtualizacao = getIdentificadorAtualizacao();

		String identificadorAtualizacao = itemImportacaoCacheModel.identificadorAtualizacao;

		if ((identificadorAtualizacao != null) &&
				(identificadorAtualizacao.length() == 0)) {
			itemImportacaoCacheModel.identificadorAtualizacao = null;
		}

		itemImportacaoCacheModel.importado = isImportado();

		return itemImportacaoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{itemImportacaoId=");
		sb.append(getItemImportacaoId());
		sb.append(", tipoItem=");
		sb.append(getTipoItem());
		sb.append(", dataImportacao=");
		sb.append(getDataImportacao());
		sb.append(", identificadorAtualizacao=");
		sb.append(getIdentificadorAtualizacao());
		sb.append(", importado=");
		sb.append(isImportado());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("br.com.seatecnologia.in.importador.dou.model.ItemImportacao");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemImportacaoId</column-name><column-value><![CDATA[");
		sb.append(getItemImportacaoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoItem</column-name><column-value><![CDATA[");
		sb.append(getTipoItem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataImportacao</column-name><column-value><![CDATA[");
		sb.append(getDataImportacao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identificadorAtualizacao</column-name><column-value><![CDATA[");
		sb.append(getIdentificadorAtualizacao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>importado</column-name><column-value><![CDATA[");
		sb.append(isImportado());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ItemImportacao.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ItemImportacao.class, ModelWrapper.class
		};
	private long _itemImportacaoId;
	private String _tipoItem;
	private Date _dataImportacao;
	private String _identificadorAtualizacao;
	private String _originalIdentificadorAtualizacao;
	private boolean _importado;
	private boolean _originalImportado;
	private boolean _setOriginalImportado;
	private long _columnBitmask;
	private ItemImportacao _escapedModel;
}